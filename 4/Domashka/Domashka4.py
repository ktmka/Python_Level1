import random
# Задача 22:
# Даны два неупорядоченных набора целых чисел (может быть, с повторениями).
# Выдать без повторений в порядке возрастания все те числа, которые встречаются в обоих наборах.
# Пользователь вводит 2 числа.
# n - кол-во элементов первого набора. m - кол-во элементов второго набора. Значения генерируются случайным образом.

# n = int(input("Введите размерность n: "))
# m = int(input("введите размерность m: "))
# list_n = list()
# for i in range(n):
#      list_n.append(random.randint(0, 10)) 
# list_m = list()
# for i in range(m):
#      list_m.append(random.randint(0, 10)) 
# print(f"Первый набор = {list_n}")
# print(f"Второй набор = {list_m}")
# res_n = set(list_n) 
# res_m = set(list_m)
# result = res_n & res_m     #убирает повторения при объединении
# if (len(result) > 0):
#     print(result)
# else:
#     print("Повторяющихся чисел не обнаружено")
    
# Задача 24:
# В фермерском хозяйстве в Карелии выращивают чернику. Она растет на круглой грядке, 
# причем кусты высажены только по окружности. Таким образом, у каждого куста есть ровно 
# два соседних. Всего на грядке растет N кустов. Эти кусты обладают разной урожайностью, 
# поэтому ко времени сбора на них выросло различное число ягод – на i-ом кусте выросло ai ягод.
# В этом фермерском хозяйстве внедрена система автоматического сбора черники. 
# Эта система состоит из управляющего модуля и нескольких собирающих модулей. 
# Собирающий модуль за один заход, находясь непосредственно перед некоторым кустом, 
# собирает ягоды с этого куста и с двух соседних с ним.
# Напишите программу для нахождения максимального числа ягод, которое может собрать 
# за один заход собирающий модуль, находясь перед некоторым кустом заданной во входном файле 
# грядки.

n = int(input("Введите число кустов: "))
list_ = list()
for i in range(n):
     list_.append(random.randint(0, n)) 
print(f"Количество ягод на каждом из кустов: {list_}") 

count = 0
max = 0
for i in range(len(list_) - 1):
    count = list_[i - 1] + list_[i] + list_[i + 1]
    if (max < count): max = count
if (max > (list_[-2] + list_[-1] + list_[0])): print(max)
else: print((list_[-2] + list_[-1] + list_[0]))




